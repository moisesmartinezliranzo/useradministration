<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bnt_DeleteUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>